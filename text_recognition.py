import pytesseract
from PIL import Image
import os


def extract_text_from_image(image_path):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—è pytesseract.

    Args:
        image_path (str): –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

    Returns:
        str: –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    """
    try:
        if not os.path.exists(image_path):
            return f"–§–∞–π–ª {image_path} –Ω–µ –Ω–∞–π–¥–µ–Ω"

        image = Image.open(image_path)
        custom_config = r"--oem 3 --psm 6 -l rus"
        text = pytesseract.image_to_string(image, config=custom_config, lang="rus")

        return text.strip() if text.strip() else "–¢–µ–∫—Å—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω"

    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}"


def process_all_images_to_md():
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ pics –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ lectures.md.
    """
    folder_path = "pics"
    output_file = "lectures.md"

    if not os.path.exists(folder_path):
        print(f"–ü–∞–ø–∫–∞ {folder_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–ª—è –ø–æ—Ä—è–¥–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏)
    image_extensions = {".jpg", ".jpeg", ".png", ".bmp", ".tiff", ".gif"}
    images = sorted(
        [
            f
            for f in os.listdir(folder_path)
            if os.path.splitext(f)[1].lower() in image_extensions
        ]
    )

    if not images:
        print("–í –ø–∞–ø–∫–µ pics –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!")
        return

    print(f"–ù–∞–π–¥–µ–Ω–æ {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}")
    print("=" * 60)

    with open(output_file, "w", encoding="utf-8") as md_file:
        for i, image_name in enumerate(images, 1):
            image_path = os.path.join(folder_path, image_name)
            print(f"[{i}/{len(images)}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {image_name}")

            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç
            text = extract_text_from_image(image_path)

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ markdown —Ñ–∞–π–ª
            md_file.write(f"# {image_name}\n\n")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞
            md_file.write(f"{text}\n\n")  # –¢–µ–∫—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            md_file.write("---\n\n")  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏

            print(f"    ‚úì –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω ({len(text)} —Å–∏–º–≤–æ–ª–æ–≤)")

    print("=" * 60)
    print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_file}")


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Tesseract
    try:
        pytesseract.get_tesseract_version()
    except:
        print("‚ùå Tesseract –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Tesseract OCR –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—É—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã")
        return

    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    print()

    # –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    process_all_images_to_md()


if __name__ == "__main__":
    main()
